# Multiple-page Application

# Single-page Application

# Что такое React

# Virtual DOM. Browser DOM 
 - https://maggieappleton.com/react-vdom

# Create React App
 - https://create-react-app.dev/

# React DevTools
 - https://reactjs.org/blog/2019/08/15/new-react-devtools.html
 - https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi?hl=en

# React-элементы
  - React.createElement(type, [props], [...children])
type - имя встроенного React-элемента который в Virtual DOM соответсвует будущему HTML-тегу.
props - объект содержащий HTML-атрибуты и кастомные свойства. Может быть null или пустой объект, если передавать ничего не нужно.
children - произвольное количество аргументов после второго это дети создаваемого элемента. Так создается дерево элементов.

# Рендер элемента в DOM-дерево

# JavaScript Syntax Extension (JSX)
Позволяет использовать XML-образный синтаксис прямо в JavaScript
Упрощает код, делает его декларативным и читабельным
Описывает объекты - элементы Virtual DOM
Это не HTML, Babel трансформирует JSX в вызовы React.createElement()
В JSX можно использовать весь потенциал JavaScript
 - https://ru.reactjs.org/docs/introducing-jsx.html
 - https://ru.reactjs.org/docs/rendering-elements.html
 - https://ru.reactjs.org/docs/dom-elements.html#differences-in-attributes

# Компоненты

# Компоненты-функции

# Свойства компонента (props)

# Свойство props.children

# Свойство defaultProps

# Свойство propTypes
 - https://www.npmjs.com/package/prop-types

# Рендер по условию
# if с помощью логического оператора &&

# if...else с помощью тернарного оператора
- https://ru.reactjs.org/docs/conditional-rendering.html

# Коллекции
# Ключи
- https://ru.reactjs.org/docs/lists-and-keys.html


Посмотреть самим
# Алгоритм обновления DOM
- https://medium.com/@gethylgeorge/how-virtual-dom-and-diffing-works-in-react-6fc805f9f84e
- https://nickbulljs.medium.com/how-virtual-dom-work-567128ed77e9
